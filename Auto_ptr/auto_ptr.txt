STL 智能指针 auto_ptr
链表、STL 容器、串、数据库系统以及交互式应用必须使用动态内存分配。
以防万一发生异常导致内存溢出，采用特殊模板 std::auto_ptr。
目的是促使动态内存和异常之间进行平滑的交互。
auto_ptr 保证当异常抛出时，分配当对象能被自动销毁，内存能被自动释放。

智能指针的使用限制
1、	要求对象只能有一个拥有者。这一点和前面实现的 SmartPtr 不同。
	classA *pA = new classA;
	auto_ptr<classA> ptr1(pA);
	auto_ptr<classA> ptr2(pA);

2、 不能以传值的方式进行传递，可以采用引用的方式避免程序内其他方式的所有权的转移。

3、不支持数组

4、注意 Release 语意。 Release 是释放指针，即交出指针的所有权。

5、拷贝构造和＝操作符时的特殊含义决定了它不能做为 STL 标准容器的成员。